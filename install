#!/bin/bash

#############
# FUNCTIONS #
#############

function apt_installation()
{
    sudo apt update -qq
    sudo apt upgrade -yqq
    xargs -a ./.lists/apt.list sudo apt install -yqqq
    # docker (fix it)
    #sudo apt-get remove docker docker-engine docker.io containerd runc
    #sudo install -m 0755 -d /etc/apt/keyrings
    #curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
    #sudo chmod a+r /etc/apt/keyrings/docker.gpg
    #echo \
    #"deb [arch=\"$(dpkg --print-architecture)\" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
    #"$(. /etc/os-release && echo '$VERSION_CODENAME')" stable" | \
    #sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
    #sudo apt update
    #sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
}

function pacman_installation()
{
    sudo pacman -Syyu
    xargs -a ./.lists/pacman.list sudo pacman -Sy --needed
    # teams
    git clone https://aur.archlinux.org/teams.git
    cd teams || (echo "Couldn't clone teams client on Arch Linux..." ; exit 1)
    makepkg -si
    cd ..
    rm -rf teams/
}

function zypper_installation()
{
    sudo zypper ref
    sudo zypper update
    xargs -a ./.lists/zypper.list sudo zypper install -y
    # teams
    sudo rpm --import https://packages.microsoft.com/keys/microsoft.asc
    sudo zypper ar https://packages.microsoft.com/yumrepos/ms-teams/ ms-teams
    sudo zypper refresh
    sudo zypper install -y teams
}

function brew_installation()
{
    brew update
    brew upgrade
    xargs -a ./.lists/brew.list brew install
}

function run_external_installation()
{
    # Criterion
    curl -sSL "https://github.com/Snaipe/Criterion/releases/download/v2.4.0/criterion-2.4.0-linux-x86_64.tar.xz" -o criterion-2.4.0.tar.xz || (echo "Couldn't clone criterion..." ; exit 1)
    tar xf criterion-2.4.0.tar.xz
    cp -r criterion-2.4.0/* /usr/local/
    echo "/usr/local/lib" > /etc/ld.so.conf.d/usr-local.conf
    ldconfig
    rm -rf criterion-2.4.0.tar.xz criterion-2.4.0/

    # CONFIG EMACS
    git clone https://github.com/Epitech/epitech-emacs.git
    cd epitech-emacs || (echo "Couldn't clone epitech emacs configuration..." ; exit 1)
    git checkout 278bb6a630e6474f99028a8ee1a5c763e943d9a3
    ./INSTALL.sh local
    cd .. && rm -rf epitech-emacs
}

function installation_manager() {
    echo "package manager found: $1!"
    if [[ $1 = "apt" ]]; then
        apt_installation
    elif [[ $1 = "dnf" ]]; then
        echo "Head over to https://github.com/Epitech/dump to install the dump."
    elif [[ $1 = "pacman" ]]; then
        pacman_installation
    elif [[ $1 = "zypper" ]]; then
        zypper_installation
    elif [[ $1 = "brew" ]]; then
        brew_installation
    fi
}

########
# CODE #
########

# Get package manager name
package_managers=("brew" "apt" "dnf" "pacman" "zypper")
has_found=0
package_manager_found=""
for element in "${package_managers[@]}"; do
    which "$element" &> /dev/null
    if [[ "$?" -eq 0 ]]; then
        has_found=1
        package_manager_found=$element
        break
    fi
done

# Run commands depending of the package manager
if [[ has_found -eq 1 ]]; then
    installation_manager "$package_manager_found"
    run_external_installation
else
    echo "Couldn't find any known package manager..."
fi
